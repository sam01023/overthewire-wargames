LEVEL: Bandit0
Username: bandit0
Password: ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If
Notes:
- For this level I have used "cat" command to read the readme file on terminal itself.

LEVEL: Bandit1
Username: bandit1
Password: 263JGJPfgU6LtdEvgfWU1XP5yac29mFx
Notes:
- The file name inside this level was "-"
- To read this file I have used command "cat ./-"

LEVEL: Bandit2
Username: bandit2
Password: MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx
Notes:
- In this level the file name had spaces in it.
- I have used "\" between the spaces in the name of the file.

LEVEL: Bandit3
Username: bandit3
Password: 2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ
Notes:
- The file in this level was hidden so  I have used "ls -all" command to view all file including hidden file.

LEVEL: Bandit4
Username: bandit4
Password: 4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw
Notes:
- In this level their were many types of file and we have to find the human redable file.
- so I have used "file ./*" to view the types of all files.
- The one whoes type is ASCII text is the one.

LEVEL: Bandit5
Username: bandit5
Password: HWasnPhtq9AVKe0dmk45nxy20cvUa6EG
Notes:
- For this level we have to find human readable, 1033 bytes in size, and not executable file.
- I have used "find" command.
- The command was "find -type f -size 1033c".

LEVEL: Bandit6
Username: bandit6
Password: morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj
Notes:
- For this level I have used "find" command.
- The command was "find -user bandit7 -group bandit6 -size 33c 2>/dev/null"

LEVEL: Bandit7
Username: bandit7
Password: dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc
Notes:
- For this level I have to find the word "millionth" in the data.txt file, so I used "grep" command.
- The command was "grep "millionth" data.txt"

LEVEL: Bandit8
Username: bandit8
Password: 4CKMh1JI91bUIZZPXDqGanal4xvAg0JM
Notes:
- For this level I have used "sort" command to sort the text inside the file and then used "uniq" command to get the unique text from the file.
- The command is "sort data.txt | uniq -u "

LEVEL: Bandit9
Username: bandit9
Password: FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey
Notes:
- In this level the password is in the file and is preceded by several '=' so I have used "strings" command to read the readable text from the file and then used grep to locate '='.
- The command is "strings data.txt | grep "===" ".

LEVEL: Bandit10
Username: bandit10
Password: dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr
Notes:
- In this level the password is encoded in base64 format so I have used "base64" command.
- The command is "base64 -d data.txt "

LEVEL: Bandit11
Username: bandit11
Password: 7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4
Notes:
- In this level the password was encoded in caesar cipher, it is ROT13. Every letter in the file has been rotated 13 places in the aphlabet.
- The command I have used is "cat data.txt | tr 'A-Za-z' 'N-ZA-Mn-za-m' "
- "tr" command is used to translate the characters.

LEVEL: Bandit12
Username: bandit12
Password: FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn
Notes:
- In this level they have provided a hexdump of file  that has been repeatedly compressed.
- So first I have made a temp folder where I copied the file and then used "xxd -r data.txt > data.out " command to reverse hexdump back to binary file.
- The command used for this level was "file", "mv", "gunzip", "tar -xf", "bunzip2".
- This was a repetative process to unzipping the file using the above commands.
- first check the file type using "file" and then use others to unzip it.

LEVEL: Bandit13
Username: bandit13
Password: NA
Notes:
- In this level they haven't provided any password instead they have provided us a ssh key which we can use to access bandit14
- For this level I have used "ssh -i sshkey.private bandit14@localhost -p 2220"

LEVEL: Bandit14
Username: bandit14
Password: 8xCjnmgoKbGLhHFAZlGE5Tmu4M2tKJQo
Notes:
- In this level I first got the password for bandit14 in "/etc/bandit_pass/bandit14".
- I have submitted that password to 30000 using "echo "bandit14-password" | nc localhost 30000 "
- "nc" is command used to read from and write to a network connections using TCP or UDP.

LEVEL: Bandit15
Username: bandit15
Password: kSkvUpMQ7lBYyCM4GBPvCvT1BfWRy0Dx
Notes:
- The objective for this level was to submit the password of bandit15 to port 30001 on localhost over a secure SSL/TLS connection.
- When the command "openssl s_client -connect localhost:30001" is run, first there will happen a SSL handshake which establishes a secure, encrypted communication channel with the service running on localhost at port 30001.
- After establishing this secure connection it expects to send the password for Bandit15 as input.
Then after giving the password the server responses with the password for next level.

LEVEL: Bandit16
Username: bandit16
Password: NA
Notes:
- In level 16 there was no password instead they have provided a RSA key to access the next level.
- Which was done by submitting the password of bandit16 to a port in the range 31000 - 32000.
- So I have used "nc -zv localhost 31000-32000 2>&1 | grep succeeded", where "z" tells nc to scan without actually sending data and "v" gives the detailed output.
- After getting all the ports I have used "echo "password-bandit16" | openssl s_client -connect localhost:<port> ". I have used this for every port and then I got key from one of the port.
- I saved that key in a temp folder and then used it to open the next level's ssh using "ssh -i bandit17_key bandit17@bandit.labs.overthewire.org -p 2220"

LEVEL: Bandit17
Username: bandit17
Password: x2gLTTjFwMOhQ8oWNbMN362QKxfRqGlO
Notes:
- In this level we just have to find the line that is changed in the new password file.
- I have used "diff passwords.old passwords.new" to get the different texts, the second one is the password.

LEVEL: Bandit18
Username: bandit18
Password: cGWpMaKXVwDUNgPAVJbWYuGHVn9zl3j8
Notes:
- In this level the password was stored in afile readme in homedirectory.
- But the .bashrd has been modified to log me out when log in with ssh.
- For this level I have used " ssh -T bandit18@bandit.labs.overthewire.org -p 2220 "cat ~/readme" " command to see only the readme file without using the .bashrc.
- "-T" tells the ssh to don't open a psedo-terminal and just do the job.
- when using the ssh it allocates a pseudo-terminal but in this level .bashrc which starts as the pseudo-terminal is allocated is not allowing us to log in so we used "-T" which doesn't allocate pseudo-terminal and instead does the job.

LEVEL: Bandit19
Username: bandit19
Password: 0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO
Notes:
- This level provides us with setuid binary in the homedirectory.
- This is like a vehicale that takes us to the password for bandit20. It gives bandit19 the privilages of bandit20.
- To find out how to use this we have to first execute it with the command "./bandit20-do".
- After that use the command "./bandit20-do cat /etc/bandit_pass/bandit20" and you will get the password.

LEVEL: Bandit20
Username: bandit20
Password: EeoULMCra2q0dSkYj561DX7s1CpBuOBt
Notes:
- In this level they have provided us with a setuid binary which makes connctions to localhost on the port you specify as a commandline argument.
- To get a free localhost port I first gave a command "echo "0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO" | nc -zv localhost 1024-65535" and then I used "echo "0qXahG8ZjOVMN9Ghs7iOWsCfZyXOUbYO" | nc -l -p 4444" to listen on the new port.
- On another teminal I have used "./bandit20-do 4444" this connects to the new port and then password new port reads it and then responses it with the password for bandit21.
